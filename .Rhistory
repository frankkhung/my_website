geom_bar(stat = "count") +
theme_minimal()
ggplot(ttc_delay, aes(x = forcats::fct_infreq(Incident))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5))
ggplot(ttc_delay, aes(x = forcats::fct_infreq(Incident))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs("Counts for each type of incidents")
ggplot(ttc_delay, aes(x = forcats::fct_infreq(Incident))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
delay_sum %>%
ggplot(aes(x = Incident, y = `Min Delay`)) +
geom_bar(stat = "identity") +
labs(title = "Average Delay Time According to Incidents") +
xlabs("Type of Incidents") +
ylabs("Average Waiting Time (mins)")
delay_sum %>%
ggplot(aes(x = Incident, y = `Min Delay`)) +
geom_bar(stat = "identity") +
labs(title = "Average Delay Time According to Incidents") +
xlab("Type of Incidents") +
ylab("Average Waiting Time (mins)")
theme_light() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5))
delay_sum %>%
ggplot(aes(x = Incident, y = `Min Delay`)) +
geom_bar(stat = "identity") +
labs(title = "Average Delay Time According to Incidents") +
xlab("Type of Incidents") +
ylab("Average Waiting Time (mins)") +
theme_light() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5))
delay_sum
delay_sum %>%
ggplot(aes(x = Incident, y = `Min Delay`)) +
geom_bar(stat = "identity") +
labs(title = "Average Delay Time According to Incidents") +
xlab("Type of Incidents") +
ylab("Average Waiting Time (mins)") +
theme_light() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5))
delay_sum$Incident <- factor(delay_sum$Incident, levels = delay_sum$Incident[order(delay_sum$`Min Delay`, decreasing = TRUE)])
delay_sum %>%
ggplot(aes(x = Incident, y = `Min Delay`)) +
geom_bar(stat = "identity") +
labs(title = "Average Delay Time According to Incidents") +
xlab("Type of Incidents") +
ylab("Average Waiting Time (mins)") +
theme_light() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5))
ggplot(ttc_delay, aes(x = forcats::fct_infreq(Incident))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
ttc_delay
View(ttc_delay)
ggplot(ttc_delay, aes(x = forcats::fct_infreq(Route))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
ggplot(ttc_delay, aes(x = Route)) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
ggplot(ttc_delay, aes(x = factor(Route))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
ggplot(ttc_delay, aes(x = factor(Location))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
ggplot(ttc_delay, aes(x = forcats::fct_infreq(Incident))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
delay_sum %>%
ggplot(aes(x = Incident, y = `Min Delay`)) +
geom_bar(stat = "identity") +
labs(title = "Average Delay Time According to Incidents") +
xlab("Type of Incidents") +
ylab("Average Waiting Time (mins)") +
theme_light() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5))
kable(delay_sum)
install.packages("kableExtra")
library(kableExtra)
kable(delay_sum)
?kable_styling()
?kable(delay_sum)
kable(delay_sum) %>% kable_styling(position = "center")
View(ttc_delay)
distinct(ttc_delay$Route)
distinct(as.character(ttc_delay$Route))
unique(ttc_delay$Route)
ggplot(ttc_delay, aes(x = factor(Route), y = `Min Delay`)) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
ggplot(ttc_delay, aes(x = factor(Route), y = `Min Delay`)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
aggregate(`Min Delay` ~ Route, ttc_delay, mean)
ggplot(ttc_delay, aes(x = factor(Route))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
library(opendatatoronto)
package <- show_package("b68cb71b-44a7-4394-97e2-5d2f41462a5d")
package
package$title
package %>% get_resource()
list <- list_package_resources("https://open.toronto.ca/dataset/ttc-streetcar-delay-data/")
list
package
list <- list_package_resources("https://open.toronto.ca/dataset/ttc-streetcar-delay-data/")
search_packages("TTC Streetcar Delay Data")
search_packages("TTC Streetcar Delay Data") %>% get_resource()
search_packages("TTC Streetcar Delay Data") %>% list_package_resources()
search_packages("TTC Streetcar Delay Data") %>% list_package_resources() %>% get_resource()
search_packages("TTC Streetcar Delay Data") %>% list_package_resources()[1]
search_packages("TTC Streetcar Delay Data") %>% list_package_resources()[1]
search_packages("TTC Streetcar Delay Data") %>% list_package_resources()
packages <- search_packages("TTC Streetcar Delay Data") %>% list_package_resources()
View(packages)
packages <- search_packages("ttc-streetcar-delay-data-2019") %>% list_package_resources()
packages <- search_packages("ttc-streetcar-delay-data-2019")
packages
?get_resource()
list_package_resources("https://open.toronto.ca/dataset/ttc-streetcar-delay-data/")
list <- list_package_resources("https://open.toronto.ca/dataset/ttc-streetcar-delay-data/") %>% get_resource()
list <- list_package_resources("https://open.toronto.ca/dataset/ttc-streetcar-delay-data/")
list
list <- list_package_resources("https://open.toronto.ca/dataset/ttc-streetcar-delay-data/")[7]
list[7]
list
show_package("786224cc-860f-4de3-a9b6-8f86753b3174")
list_package_resources("https://open.toronto.ca/dataset/neighbourhoods/") %>% get_resource()
list_package_resources("https://open.toronto.ca/dataset/neighbourhoods/")
list <- list_package_resources("https://open.toronto.ca/dataset/ttc-streetcar-delay-data/")
package <- show_package("b68cb71b-44a7-4394-97e2-5d2f41462a5d")
package
try <- list_package_resources("https://open.toronto.ca/dataset/neighbourhoods/")
try <- list_package_resources("https://open.toronto.ca/dataset/neighbourhoods/")
typeof(try)
list
list[1]
list[,7]
list[,1]
list[1,]
list[7,]
list <- list_package_resources("https://open.toronto.ca/dataset/ttc-streetcar-delay-data/")[7,]
list
list <- list_package_resources("https://open.toronto.ca/dataset/ttc-streetcar-delay-data/")[7,] %>% get_resource()
list
ttc_delay <- as.data.frame(list_package_resources("https://open.toronto.ca/dataset/ttc-streetcar-delay-data/")[7,] %>% get_resource())
View(list)
ttc_delay <- list_package_resources("https://open.toronto.ca/dataset/ttc-streetcar-delay-data/")[7,] %>% get_resource()
ttc_delay$`Jan 2019 `
typeof(ttc_delay$`Jan 2019 `)
as.data.frame(ttc_delay$`Jan 2019 `)
jan <- as.data.frame(ttc_delay$`Jan 2019 `)
fab <- as.data.frame(ttc_delay$`Feb 2019 `)
mar <- as.data.frame(ttc_delay$`Mar 2019 `)
april <- as.data.frame(ttc_delay$`Apr 2019`)
may <- as.data.frame(ttc_delay$`May 2019 `)
june <- as.data.frame(ttc_delay$`June 2019 `)
july <- as.data.frame(ttc_delay$`July 2019 `)
aug <- as.data.frame(ttc_delay$`Aug, 2019 `)
sep <-as.data.frame(ttc_delay$`Sept 2019 `)
oct <-as.data.frame(ttc_delay$`Oct 2019 `)
nov <-as.data.frame(ttc_delay$` Nov 2019`)
dec <- as.data.frame(ttc_delay$` Dec 2019`)
dec <- as.data.frame(ttc_delay$` Dec 2019`)
dec
nov <-as.data.frame(ttc_delay$`Nov 2019`)
nov
nov <-as.data.frame(ttc_delay$` Nov 2019`)
dec <- as.data.frame(ttc_delay$`Dec 2019`)
jan <- as.data.frame(ttc_delay$`Jan 2019 `)
fab <- as.data.frame(ttc_delay$`Feb 2019 `)
mar <- as.data.frame(ttc_delay$`Mar 2019 `)
april <- as.data.frame(ttc_delay$`Apr 2019`)
may <- as.data.frame(ttc_delay$`May 2019 `)
june <- as.data.frame(ttc_delay$`June 2019 `)
july <- as.data.frame(ttc_delay$`July 2019 `)
aug <- as.data.frame(ttc_delay$`Aug, 2019 `)
sep <-as.data.frame(ttc_delay$`Sept 2019 `)
oct <-as.data.frame(ttc_delay$`Oct 2019 `)
nov <-as.data.frame(ttc_delay$` Nov 2019`)
dec <- as.data.frame(ttc_delay$`Dec 2019`)
ttc_street <- jan
ttc_delay[1]
ttc_street <- ttc_delay[1]
ttc_street <- ttc_delay[1]
for (i in 2:12){
ttc_street <- cbind(ttc_street, ttc_delay[i])
}
View(ttc_street)
ttc_street <- ttc_delay[1]
ttc_street
ttc_street <- ttc_delay[1][1]
ttc_delay[1][1]
agg <- NULL
agg[1] <- as.data.frame(ttc_delay$`Jan 2019 `)
agg[2]  <- as.data.frame(ttc_delay$`Feb 2019 `)
agg[3]  <- as.data.frame(ttc_delay$`Mar 2019 `)
agg[4]  <- as.data.frame(ttc_delay$`Apr 2019`)
agg[5]  <- as.data.frame(ttc_delay$`May 2019 `)
agg[6]  <- as.data.frame(ttc_delay$`June 2019 `)
agg[7]  <- as.data.frame(ttc_delay$`July 2019 `)
agg[8] <- as.data.frame(ttc_delay$`Aug, 2019 `)
agg[9]  <-as.data.frame(ttc_delay$`Sept 2019 `)
agg[10]  <-as.data.frame(ttc_delay$`Oct 2019 `)
agg[11]  <-as.data.frame(ttc_delay$` Nov 2019`)
agg[12]  <- as.data.frame(ttc_delay$`Dec 2019`)
agg[1]
agg
jan <- as.data.frame(ttc_delay$`Jan 2019 `)
fab <- as.data.frame(ttc_delay$`Feb 2019 `)
mar <- as.data.frame(ttc_delay$`Mar 2019 `)
april <- as.data.frame(ttc_delay$`Apr 2019`)
may <- as.data.frame(ttc_delay$`May 2019 `)
june <- as.data.frame(ttc_delay$`June 2019 `)
july <- as.data.frame(ttc_delay$`July 2019 `)
aug <- as.data.frame(ttc_delay$`Aug, 2019 `)
sep <-as.data.frame(ttc_delay$`Sept 2019 `)
oct <-as.data.frame(ttc_delay$`Oct 2019 `)
nov <-as.data.frame(ttc_delay$` Nov 2019`)
dec <- as.data.frame(ttc_delay$`Dec 2019`)
ttc_agg <- cbind(jan, fab)
ttc_agg <- rbind(jan, fab)
ttc_agg <- rbind(jan, fab, mar)
ttc_agg <- rbind(jan, fab, mar, april)
ttc_agg <- rbind(jan, fab, mar, april)
ttc_agg <- rbind(jan, fab)
ttc_agg <- rbind(ttc_agg, mar)
ttc_agg <- rbind(ttc_agg, april)
View(april)
View(aug)
april <- as.data.frame(ttc_delay$`Apr 2019`)[-6]
ttc_agg <- rbind(jan, fab, mar, april, may, june)
ttc_agg <- rbind(jan, fab)
ttc_agg <- rbind(ttc_agg, mar)
ttc_agg <- rbind(ttc_agg, april)
names(jan)
names <- names(jan)
colnames(april) <- c(names)
ttc_agg <- rbind(ttc_agg, april)
ttc_agg <- rbind(jan, fab, mar, april, may, june, july, aug, sep)
may
june
View(june)
colnames(june) <- c(names)
colnames(june) <- c(names)
ttc_agg <- rbind(jan, fab, mar, april, may, june, july, aug, sep, act, nov, dec)
ttc_agg <- rbind(jan, fab, mar, april, may, june, july, aug, sep, oct, nov, dec)
colnames(aug) <- c(names)
jan <- as.data.frame(ttc_delay$`Jan 2019 `)
names <- names(jan)
fab <- as.data.frame(ttc_delay$`Feb 2019 `)
mar <- as.data.frame(ttc_delay$`Mar 2019 `)
april <- as.data.frame(ttc_delay$`Apr 2019`)[-6]
colnames(april) <- c(names)
may <- as.data.frame(ttc_delay$`May 2019 `)
june <- as.data.frame(ttc_delay$`June 2019 `)
colnames(june) <- c(names)
july <- as.data.frame(ttc_delay$`July 2019 `)
colnames(july) <- c(names)
aug <- as.data.frame(ttc_delay$`Aug, 2019 `)
colnames(aug) <- c(names)
sep <-as.data.frame(ttc_delay$`Sept 2019 `)
colnames(sep) <- c(names)
oct <-as.data.frame(ttc_delay$`Oct 2019 `)
colnames(oct) <- c(names)
nov <- as.data.frame(ttc_delay$` Nov 2019`)
colnames(nov) <- c(names)
dec <- as.data.frame(ttc_delay$`Dec 2019`)
colnames(dec) <- c(names)
ttc_agg <- rbind(jan, fab, mar, april, may, june, july, aug, sep, oct, nov, dec)
ttc_agg <- list_package_resources("https://open.toronto.ca/dataset/ttc-streetcar-delay-data/")[7,] %>% get_resource()
jan <- as.data.frame(ttc_agg$`Jan 2019 `)
names <- names(jan)
fab <- as.data.frame(ttc_agg$`Feb 2019 `)
mar <- as.data.frame(ttc_agg$`Mar 2019 `)
april <- as.data.frame(ttc_agg$`Apr 2019`)[-6]
colnames(april) <- c(names)
may <- as.data.frame(ttc_agg$`May 2019 `)
june <- as.data.frame(ttc_agg$`June 2019 `)
colnames(june) <- c(names)
july <- as.data.frame(ttc_agg$`July 2019 `)
colnames(july) <- c(names)
aug <- as.data.frame(ttc_agg$`Aug, 2019 `)
colnames(aug) <- c(names)
sep <-as.data.frame(ttc_agg$`Sept 2019 `)
colnames(sep) <- c(names)
oct <-as.data.frame(ttc_agg$`Oct 2019 `)
colnames(oct) <- c(names)
nov <- as.data.frame(ttc_agg$` Nov 2019`)
colnames(nov) <- c(names)
dec <- as.data.frame(ttc_agg$`Dec 2019`)
colnames(dec) <- c(names)
ttc_delay<- rbind(jan, fab, mar, april, may, june, july, aug, sep, oct, nov, dec)
ggplot(ttc_delay, aes(x = factor(Route))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
delay_sum %>%
ggplot(aes(x = Incident, y = `Min Delay`)) +
geom_bar(stat = "identity") +
labs(title = "Average Delay Time According to Incidents") +
xlab("Type of Incidents") +
ylab("Average Waiting Time (mins)") +
theme_light() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5))
ggplot(ttc_delay, aes(x = factor(Route))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
ggplot(ttc_delay, aes(x = factor(Location))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
ggplot(ttc_delay, aes(x = forcats::fct_infreq(Incident))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
delay_sum <- as.data.frame(aggregate(`Min Delay` ~ Incident, ttc_delay, mean))
aggregate(`Min Delay` ~ Route, ttc_delay, mean)
delay_sum$Incident <- factor(delay_sum$Incident, levels = delay_sum$Incident[order(delay_sum$`Min Delay`, decreasing = TRUE)])
kable(delay_sum) %>% kable_styling(position = "center")
delay_sum %>%
ggplot(aes(x = Incident, y = `Min Delay`)) +
geom_bar(stat = "identity") +
labs(title = "Average Delay Time According to Incidents") +
xlab("Type of Incidents") +
ylab("Average Waiting Time (mins)") +
theme_light() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5))
library(readxl)
library(ggplot2)
library(tidyverse)
library(forcats)
library(plyr)
library(kableExtra)
library(opendatatoronto)
ttc_agg <- list_package_resources("https://open.toronto.ca/dataset/ttc-streetcar-delay-data/")[7,] %>% get_resource()
jan <- as.data.frame(ttc_agg$`Jan 2019 `)
names <- names(jan)
fab <- as.data.frame(ttc_agg$`Feb 2019 `)
mar <- as.data.frame(ttc_agg$`Mar 2019 `)
april <- as.data.frame(ttc_agg$`Apr 2019`)[-6]
colnames(april) <- c(names)
may <- as.data.frame(ttc_agg$`May 2019 `)
june <- as.data.frame(ttc_agg$`June 2019 `)
colnames(june) <- c(names)
july <- as.data.frame(ttc_agg$`July 2019 `)
colnames(july) <- c(names)
aug <- as.data.frame(ttc_agg$`Aug, 2019 `)
colnames(aug) <- c(names)
sep <-as.data.frame(ttc_agg$`Sept 2019 `)
colnames(sep) <- c(names)
oct <-as.data.frame(ttc_agg$`Oct 2019 `)
colnames(oct) <- c(names)
nov <- as.data.frame(ttc_agg$` Nov 2019`)
colnames(nov) <- c(names)
dec <- as.data.frame(ttc_agg$`Dec 2019`)
colnames(dec) <- c(names)
ttc_delay<- rbind(jan, fab, mar, april, may, june, july, aug, sep, oct, nov, dec)
ggplot(ttc_delay, aes(x = factor(Route))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
ggplot(ttc_delay, aes(x = factor(Location))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
ggplot(ttc_delay, aes(x = forcats::fct_infreq(Incident))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
delay_sum <- as.data.frame(aggregate(`Min Delay` ~ Incident, ttc_delay, mean))
aggregate(`Min Delay` ~ Route, ttc_delay, mean)
delay_sum$Incident <- factor(delay_sum$Incident, levels = delay_sum$Incident[order(delay_sum$`Min Delay`, decreasing = TRUE)])
kable(delay_sum) %>% kable_styling(position = "center")
delay_sum %>%
ggplot(aes(x = Incident, y = `Min Delay`)) +
geom_bar(stat = "identity") +
labs(title = "Average Delay Time According to Incidents") +
xlab("Type of Incidents") +
ylab("Average Waiting Time (mins)") +
theme_light() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5))
delay_sum$Incident
delay_su
delay_sum
View(ttc_delay)
ttc_delay_sample <- read_xlsx("/Users/frankhung/Documents/FHDocument/2020_2021/STA304/Assignments/Assignment\ 1/ttc-streetcar-delay-data-2019.xlsx")
ggplot(ttc_delay, aes(x = forcats::fct_infreq(Incident))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
delay_sum <- as.data.frame(aggregate(`Min Delay` ~ Incident, ttc_delay, mean))
aggregate(`Min Delay` ~ Route, ttc_delay, mean)
delay_sum$Incident <- factor(delay_sum$Incident, levels = delay_sum$Incident[order(delay_sum$`Min Delay`, decreasing = TRUE)])
kable(delay_sum) %>% kable_styling(position = "center")
delay_sum %>%
ggplot(aes(x = Incident, y = `Min Delay`)) +
geom_bar(stat = "identity") +
labs(title = "Average Delay Time According to Incidents") +
xlab("Type of Incidents") +
ylab("Average Waiting Time (mins)") +
theme_light() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5))
ggplot(ttc_delay, aes(x = forcats::fct_infreq(Incident))) +
geom_bar(stat = "count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5)) +
labs(title = "Counts for each type of incidents")
delay_sum <- as.data.frame(aggregate(`Min Delay` ~ Incident, ttc_delay, mean))
delay_sum$Incident <- factor(delay_sum$Incident, levels = delay_sum$Incident[order(delay_sum$`Min Delay`, decreasing = TRUE)])
kable(delay_sum) %>% kable_styling(position = "center")
delay_sum %>%
ggplot(aes(x = Incident, y = `Min Delay`)) +
geom_bar(stat = "identity") +
labs(title = "Average Delay Time According to Incidents") +
xlab("Type of Incidents") +
ylab("Average Waiting Time (mins)") +
theme_light() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.6, hjust=0.5))
head(ttc_delay)
?head
head(ttc_delay, n= 5)
kable(head(ttc_delay, n= 5))
kable(head(ttc_delay, n= 5), position = 'center')
summary(ttc_delay)
sum <- summary(ttc_delay)
as.data.frame(sum)
View(ttc_delay)
ggplot(ttc_delay, aes(x = ttc_delay$`Min Delay`)) %>%
geom_histogram()
ggplot(ttc_delay, aes(x = ttc_delay$`Min Delay`)) +
geom_histogram()
ggplot(ttc_delay, aes(x = ttc_delay$`Min Delay`)) +
geom_histogram(binwidth = 20)
ggplot(ttc_delay, aes(x = ttc_delay$`Min Delay`)) +
geom_histogram(binwidth = 30)
ggplot(ttc_delay, aes(x = `Min Delay`)) +
geom_histogram(binwidth = 30)
sum <- summary(ttc_delay$`Min Delay`)
sum
as.data.frame(sum)
typeof(sum)
kable(sum)
qqplot(ttc_delay$`Min Delay`, groups = ttc_delay$Incident)
qqplot(ttc_delay$`Min Delay`, groups = ttc_delay$Incident)
ggplot(ttc_delay, aes(x = `Min Delay`)) +
geom_densitybi()
ggplot(ttc_delay, aes(x = `Min Delay`)) +
geom_density()
?descr
sum <- dfSummary(ttc_delay$`Min Delay`)
sum <- summarize(ttc_delay$`Min Delay`)
sum <- Summarize(ttc_delay$`Min Delay`)
sum <- summarise(ttc_delay$`Min Delay`)
sum <- summarise(ttc_delay)
delay_sum <- ttc_delay %>% summarise(
count = n(),
mean_delay = mean(ttc_delay$`Min Delay`, na.rm = TRUE),
sd_delay = sd(ttc_dealy$`Min Delay`, na.rm = TRUE)
)
delay_sum <- ttc_delay %>%
summarise( mean_delay = mean(ttc_delay$`Min Delay`, na.rm = TRUE), sd_delay = sd(ttc_dealy$`Min Delay`, na.rm = TRUE))
delay_sum <- ttc_delay %>%
summarise( mean_delay = mean(ttc_delay$`Min Delay`, na.rm = TRUE), sd_delay = sd(ttc_delay$`Min Delay`, na.rm = TRUE))
delay_sum
delay_sum <- ttc_delay %>%
summarise(count = n(), mean_delay = mean(ttc_delay$`Min Delay`, na.rm = TRUE), sd_delay = sd(ttc_delay$`Min Delay`, na.rm = TRUE))
delay_sum <- ttc_delay %>%
summarise(mean_delay = mean(ttc_delay$`Min Delay`, na.rm = TRUE), sd_delay = sd(ttc_delay$`Min Delay`, na.rm = TRUE))
delay_sum
ggplot(ttc_delay, aes(x = `Min Delay`)) +
geom_density()
kable(delay_sum, position = 'center')
?kable
?kable()
kable(delay_sum, position = 'center', caption = "Table 1: Short Statistical Summary of Min Delay")
blogdown::serve_site()
